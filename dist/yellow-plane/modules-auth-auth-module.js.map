{"version":3,"sources":["webpack:///./src/app/modules/blank-layout/modules/auth/auth-routing.module.ts","webpack:///./src/app/modules/blank-layout/modules/auth/auth.module.ts","webpack:///./src/app/modules/blank-layout/modules/auth/pages/landing/landing.page.html","webpack:///./src/app/modules/blank-layout/modules/auth/pages/landing/landing.page.scss","webpack:///./src/app/modules/blank-layout/modules/auth/pages/landing/landing.page.ts","webpack:///./src/app/shared/modules/forms.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEU;AAED;AAEhE,IAAM,MAAM,GAAW;IACtB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAgB;QAC3B,WAAW,EAAE,CAAC,mEAAS,CAAC;KAC3B;CACD,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBW;AACM;AAEW;AACM;AACM;AAWtE;IAAA;IAA0B,CAAC;IAAd,UAAU;QATtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAiB;gBACjB,wEAAkB;aACnB;YACD,SAAS,EAAE,EAAE;YACb,YAAY,EAAE,CAAC,4EAAgB,CAAC;SACjC,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;AChBvB,wwFAAwwF,gMAAgM,inCAAinC,6LAA6L,ooCAAooC,iLAAiL,ovBAAovB,6LAA6L,oqCAAoqC,yKAAyK,+5BAA+5B,qLAAqL,ggEAAggE,qKAAqK,6zE;;;;;;;;;;;ACAliW,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC+B;AACJ;AACpC;AAOzC;IAGE,0BACS,WAAwB,EACvB,MAAc,EACd,EAAe;QAFhB,gBAAW,GAAX,WAAW,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QAEvB,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEF,mCAAQ,GAAR;IACA,CAAC;IAED,qCAAU,GAAV;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;YAC3H,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAG,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC9I,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7I,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;YAC3H,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9K,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC5G,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvD,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC7D,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX,UAAY,OAAoB;QAC9B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;QACxB,EAAE,EAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC3B,EAAE,EAAC,MAAM,GAAG,EAAE,IAAI,MAAM,GAAG,GAAG,CAAC,EAAC;gBAC9B,MAAM,CAAC;oBACL,QAAQ,EAAE;wBACR,QAAQ,EAAE,IAAI;qBACf;iBACF;YACH,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI;QACb,CAAC;IACH,CAAC;IAEO,uCAAY,GAApB,UAAqB,IAAI;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;YACtC,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,OAAO,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;aAC7B,IAAI,CAAC,aAAG;YACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAQ,GAAR,UAAS,KAAK;QAAd,iBAYC;QAXC,EAAE,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC;YACvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC;iBAC5B,IAAI,CAAC,aAAG;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC,EAAE,aAAG;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAED,sCAAW,GAAX,UAAY,KAAK;QAAjB,iBAYC;QAXC,EAAE,EAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC;iBAC/B,IAAI,CAAC,aAAG;gBACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC,EAAE,aAAG;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IA5FU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAKsB,yEAAW;YACf,sDAAM;YACV,0DAAW;OANd,gBAAgB,CA8F5B;IAAD,uBAAC;CAAA;AA9F4B;;;;;;;;;;;;;;;;;;;;;;;ACVY;AACyB;AAWlE;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAR9B,8DAAQ,CAAC;YACR,OAAO,EAAE,EACR;YACD,OAAO,EAAE;gBACP,kEAAmB;gBACnB,0DAAW;aACZ;SACF,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ","file":"modules-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuard } from '../../../../shared/guards/auth.guard';\r\n\r\nimport { LandingComponent } from './pages/landing/landing.page';\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t    path: '',\r\n\t    component: LandingComponent,\r\n\t    canActivate: [AuthGuard]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LandingComponent } from './pages/landing/landing.page';\r\nimport { FormsSharedModules } from '../../../../shared/modules/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsSharedModules\r\n  ],\r\n  providers: [],\r\n  declarations: [LandingComponent]\r\n})\r\nexport class AuthModule { }\r\n","module.exports = \"<div class=\\\"landing-page\\\">\\r\\n\\r\\n\\t<div class=\\\"content-bg-wrap\\\">\\r\\n\\t</div>\\r\\n\\r\\n\\t<!-- Landing Header -->\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t<div id=\\\"site-header-landing\\\" class=\\\"header-landing\\\">\\r\\n\\t\\t\\t\\t\\t<a href=\\\"\\\" class=\\\"logo\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img src=\\\"/assets/img/logo.png\\\" alt=\\\"YelloPlane\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"logo-title\\\">yelloplane</h5>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<!-- ... end Landing Header -->\\r\\n\\r\\n\\t<!-- Login-Registration Form  -->\\r\\n\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<div class=\\\"row display-flex\\\">\\r\\n\\t\\t\\t<div class=\\\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"landing-content\\\">\\r\\n\\t\\t\\t\\t\\t<h1>Connect, Expand, Share Ideas</h1>\\r\\n\\t\\t\\t\\t\\t<p>We take your privacy very serious. We donâ€™t use what you like, follow or search for to serve up advertisements. Nor do we collect that data. The data we use is very basic data. The list of what we keep can be found on our privacy page. In addition, if you choose use our paid version, there will not be any advertisements served up to you. Please understand that advertising or paid versions of our site is the only way we are able to provide this social media platform free of charge.\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"col-xl-5 col-lg-6 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"registration-login-form\\\">\\r\\n\\t\\t\\t\\t\\t<!-- Nav tabs -->\\r\\n\\t\\t\\t\\t\\t<ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\\"olymp-login-icon\\\"><use xlink:href=\\\"/assets/icons/icons.svg#olymp-login-icon\\\"></use></svg>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#profile\\\" role=\\\"tab\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<svg class=\\\"olymp-register-icon\\\"><use xlink:href=\\\"/assets/icons/icons.svg#olymp-register-icon\\\"></use></svg>\\r\\n\\t\\t\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\r\\n\\t\\t\\t\\t\\t<!-- Tab panes -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"tab-content\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tab-pane active\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" data-mh=\\\"log-tab\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title h6\\\">Register to YelloPlane</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<form class=\\\"content\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"tryRegister(registerForm.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-6 col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !registerForm.controls.firstName.valid && registerForm.controls.firstName.touched,'has-success': registerForm.controls.firstName.valid && registerForm.controls.firstName.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">First Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"firstName\\\" type=\\\"text\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.firstName.hasError('required') && registerForm.controls.firstName.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.firstName.hasError('pattern') && registerForm.controls.firstName.touched\\\">Only Alphabets are allowed!</p>\\r\\n\\t\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.firstName.hasError('minlength') && registerForm.controls.firstName.touched\\\">Must have minimum 3 characters!</p>\\r\\n\\t\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.firstName.hasError('maxlength') && registerForm.controls.firstName.touched\\\">Maximum characters can be 50!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-6 col-md-6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !registerForm.controls.lastName.valid && registerForm.controls.lastName.touched, 'has-success': registerForm.controls.lastName.valid && registerForm.controls.lastName.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Last Name</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"lastName\\\" placeholder=\\\"\\\" type=\\\"text\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.lastName.hasError('required') && registerForm.controls.lastName.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.lastName.hasError('pattern') && registerForm.controls.lastName.touched\\\">Only Alphabets are allowed!</p>\\r\\n\\t\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.lastName.hasError('minlength') && registerForm.controls.lastName.touched\\\">Must have minimum 3 characters!</p>\\r\\n\\t\\t\\t  \\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.lastName.hasError('maxlength') && registerForm.controls.lastName.touched\\\">Maximum characters can be 50!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !registerForm.controls.email.valid && registerForm.controls.email.touched, 'has-success': registerForm.controls.email.valid && registerForm.controls.email.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Your Email</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"\\\" type=\\\"text\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.email.hasError('required') && registerForm.controls.email.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t  \\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.email.hasError('pattern') && registerForm.controls.email.touched\\\">Email is not valid!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !registerForm.controls.password.valid && registerForm.controls.password.touched, 'has-success': registerForm.controls.password.valid && registerForm.controls.password.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Your Password</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"\\\" type=\\\"password\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.password.hasError('required') && registerForm.controls.password.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.password.hasError('pattern') && registerForm.controls.password.touched\\\">Must have at least 1 character and 1 number!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.password.hasError('minlength') && registerForm.controls.password.touched\\\">Must have minimum 6 characters!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.password.hasError('maxlength') && registerForm.controls.password.touched\\\">Maximum characters can be 100!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !registerForm.controls.age.valid && registerForm.controls.age.touched, 'has-success': registerForm.controls.age.valid && registerForm.controls.age.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Age</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"age\\\" placeholder=\\\"\\\" type=\\\"text\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.age.hasError('required') && registerForm.controls.age.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.age.hasError('pattern') && registerForm.controls.age.touched\\\">Only numbers are alllowed!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.age.hasError('ageLimit') && registerForm.controls.age.touched\\\">You must be over 13 years of age!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !registerForm.controls.gender.valid && registerForm.controls.gender.touched, 'has-success': registerForm.controls.gender.valid && registerForm.controls.gender.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Your Gender</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" formControlName=\\\"gender\\\" size=\\\"auto\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"MA\\\">Male</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"FE\\\">Female</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.gender.hasError('required') && registerForm.controls.gender.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"remember\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input formControlName=\\\"acceptTerms\\\" type=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"checkbox-material\\\"><span class=\\\"check\\\"></span></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tI accept the <a href=\\\"#\\\">Terms and Conditions</a> of the website\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"registerForm.controls.acceptTerms.hasError('required') && registerForm.controls.acceptTerms.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-purple btn-lg full-width\\\">Complete Registration!</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"tab-pane\\\" id=\\\"profile\\\" role=\\\"tabpanel\\\" data-mh=\\\"log-tab\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"title h6\\\">Login to your Account</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<form class=\\\"content\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"tryLogin(loginForm.value)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\" [ngClass]=\\\"{'has-danger': !loginForm.controls.email.valid && loginForm.controls.email.touched, 'has-success': loginForm.controls.email.valid && loginForm.controls.email.touched}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Your Email</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"\\\" type=\\\"email\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"loginForm.controls.email.hasError('required') && loginForm.controls.email.touched\\\">This field is required!</p>\\r\\n\\t\\t\\t  \\t\\t\\t\\t\\t\\t\\t<p class=\\\"error-text\\\" *ngIf=\\\"loginForm.controls.email.hasError('pattern') && loginForm.controls.email.touched\\\">Email is not valid!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group label-floating is-empty\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label class=\\\"control-label\\\">Your Password</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"\\\" type=\\\"password\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xl-12 col-lg-12 col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"remember\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input name=\\\"rememberCheckbox\\\" formControlName=\\\"rememberMe\\\" type=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"checkbox-material\\\"><span class=\\\"check\\\"></span></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tRemember Me\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\" class=\\\"forgot\\\">Forgot my Password</a>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary full-width\\\">Login</button>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"or\\\"></div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" (click)=\\\"tryGoogleLogin()\\\" class=\\\"btn btn-lg bg-google full-width btn-icon-left btn-social\\\"><i class=\\\"fa fa-google\\\" aria-hidden=\\\"true\\\"></i>Login with Google</button>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p>Donâ€™t you have an account? <a href=\\\"#\\\">Register Now!</a> itâ€™s really simple and you can start enjoing all the benefits!</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../../../../../shared/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.page.html',\r\n  styleUrls: ['./landing.page.scss']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  registerForm: FormGroup;\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.createForm();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createForm() {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)])],\r\n      password: ['', Validators.required],\r\n      rememberMe : ['']\r\n    });\r\n\r\n    this.registerForm = this.fb.group({\r\n      firstName: ['', Validators.compose([Validators.required, Validators.pattern('[a-zA-Z]*'), Validators.minLength(3), Validators.maxLength(50)])],\r\n      lastName: ['', Validators.compose([Validators.required, Validators.pattern('[a-zA-Z]*'), Validators.minLength(3), Validators.maxLength(50)])],\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)])],\r\n      password: ['', Validators.compose([Validators.required, Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/), Validators.minLength(6), Validators.maxLength(100)])],\r\n      age: ['', Validators.compose([Validators.required, Validators.pattern(/^([1-9]\\d*|0)$/), this.validateAge])],\r\n      gender: ['', Validators.compose([Validators.required])],\r\n      acceptTerms: ['', Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  validateAge(control: FormControl) {\r\n    let age = control.value;\r\n    if(!isNaN(age)) {\r\n      let ageNum = parseInt(age);\r\n      if(ageNum < 13 || ageNum > 110){\r\n        return {\r\n          ageLimit: {\r\n            ageError: true\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    } \r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  private validateForm(form){\r\n    Object.keys(form.controls).forEach(field => {\r\n      const control = form.get(field);\r\n      control.markAsTouched({ onlySelf: true });\r\n    });\r\n  }\r\n\r\n  tryGoogleLogin() {\r\n    this.authService.doGoogleLogin()\r\n      .then(res => {\r\n        this.router.navigate(['/home']);\r\n      });\r\n  }\r\n\r\n  tryLogin(value) {\r\n    if(this.loginForm.valid){\r\n      this.authService.doLogin(value)\r\n        .then(res => {\r\n          this.router.navigate(['/home']);\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    else {\r\n      this.validateForm(this.loginForm);\r\n    }\r\n  }\r\n\r\n  tryRegister(value) {\r\n    if(this.registerForm.valid){\r\n      this.authService.doRegister(value)\r\n        .then(res => {\r\n          this.router.navigate(['/home']);\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n    else {\r\n      this.validateForm(this.registerForm);\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class FormsSharedModules { }\r\n"],"sourceRoot":""}