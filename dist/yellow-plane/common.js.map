{"version":3,"sources":["webpack:///./src/app/shared/services/profile/hobbiesAndInterests.service.ts","webpack:///./src/app/shared/services/profile/personalInfo.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { UserService } from './../user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\r\n\r\n\r\n@Injectable()\r\nexport class HobbiesAndInterestsService {\r\n    constructor(\r\n        private db: AngularFirestore,\r\n        private userService: UserService\r\n    ) {\r\n        // For time error\r\n        db.firestore.settings({ timestampsInSnapshots: true });\r\n    }\r\n\r\n    getHobbiesAndInterests() {\r\n        return new Promise((resolve, reject) => {\r\n            this.userService.getCurrentUser().then(user => {\r\n                this.db.doc<HobbiesAndInterests>(`hobbies_and_interests/${user.uid}`).ref.get()\r\n                .then(response => {\r\n                    resolve(response.data());\r\n                }).catch(err => {\r\n                    reject(err);\r\n                });\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    public updateHobbiesAndInterests(data: HobbiesAndInterests) {\r\n        return new Promise((resolve, reject) => {\r\n            this.userService.getCurrentUser().then(user => {\r\n                const hobbiesAndInterestsRef: AngularFirestoreDocument<any> = this.db.doc(`hobbies_and_interests/${user.uid}`);\r\n                hobbiesAndInterestsRef.set(data, {merge: true})\r\n                .then(res => {\r\n                    resolve('Hobbies & Interests successfully updated');\r\n                })\r\n                .catch(err => {\r\n                    reject(err);\r\n                });\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { UserService } from './../user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AngularFirestore, AngularFirestoreDocument } from 'angularfire2/firestore';\r\n\r\n\r\n@Injectable()\r\nexport class PersonalInfoService {\r\n    constructor(\r\n        private db: AngularFirestore,\r\n        private userService: UserService\r\n    ) {\r\n        // For time error\r\n        db.firestore.settings({ timestampsInSnapshots: true });\r\n    }\r\n\r\n    getPersonalInfo() {\r\n        return new Promise((resolve, reject) => {\r\n            this.userService.getCurrentUser().then(user => {\r\n                this.db.doc<PersonalInfo>(`personal_info/${user.uid}`).ref.get()\r\n                .then(response => {\r\n                    resolve(response.data());\r\n                }).catch(err => {\r\n                    reject(err);\r\n                });\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    public updatePersonalInfo(data: PersonalInfo) {\r\n        return new Promise((resolve, reject) => {\r\n            this.userService.getCurrentUser().then(user => {\r\n                const personalInfoRef: AngularFirestoreDocument<any> = this.db.doc(`personal_info/${user.uid}`);\r\n                personalInfoRef.set(data, {merge: true})\r\n                .then(res => {\r\n                    resolve('Info successfully updated');\r\n                })\r\n                .catch(err => {\r\n                    reject(err);\r\n                });\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}