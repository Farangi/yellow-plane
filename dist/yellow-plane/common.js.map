{"version":3,"sources":["webpack:///./src/app/shared/services/photos.service.ts","webpack:///./src/app/shared/services/posts.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { UserService } from \"./user.service\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport \"rxjs/add/operator/toPromise\";\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument\r\n} from \"angularfire2/firestore\";\r\nimport {\r\n  AngularFireStorage,\r\n  AngularFireUploadTask\r\n} from \"angularfire2/storage\";\r\nimport { resolve } from \"path\";\r\nimport { reject } from \"q\";\r\nimport { Observable } from \"../../../../node_modules/@firebase/util\";\r\n\r\n@Injectable()\r\nexport class PhotoService {\r\n  task: AngularFireUploadTask;\r\n  constructor(\r\n    private db: AngularFirestore,\r\n    private storage: AngularFireStorage,\r\n    private userService: UserService\r\n  ) {\r\n    // For time error\r\n    db.firestore.settings({ timestampsInSnapshots: true });\r\n  }\r\n\r\n  private executeUpload(photosWithDetail: any, user: any) {\r\n    return new Promise((resolve, reject) => {\r\n      let PHOTOS = [];\r\n      photosWithDetail.photos.forEach(photo => {\r\n        const file = photo.underlyingFile;\r\n        const path = `photos/${user.uid}/${new Date().getTime()}_${\r\n          photo.underlyingFile.name\r\n        }`;\r\n        const customMetadata = { app: \"Yellow Plane\" };\r\n        // start upload\r\n        this.storage\r\n          .upload(path, file, { customMetadata })\r\n          .then(resp => {\r\n            resp.ref\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                PHOTOS.push({\r\n                  name: photo.underlyingFile.name,\r\n                  photoUrl: url,\r\n                  uploadedAt: new Date().toLocaleDateString(\"en-US\", {\r\n                    weekday: \"long\",\r\n                    year: \"numeric\",\r\n                    month: \"long\",\r\n                    day: \"numeric\"\r\n                  })\r\n                });\r\n                if (PHOTOS.length === photosWithDetail.photos.length) {\r\n                  this.db\r\n                    .collection(\"uploads\")\r\n                    .add({\r\n                      userId: user.uid,\r\n                      privacy: photosWithDetail.privacy,\r\n                      description: photosWithDetail.description,\r\n                      createdAt: new Date().toLocaleTimeString(\"en-US\", {\r\n                        weekday: \"long\",\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"numeric\"\r\n                      }),\r\n                      photos: PHOTOS\r\n                    })\r\n                    .then(resp => {\r\n                      resolve(resp.id);\r\n                    })\r\n                    .catch(err => {\r\n                      reject(err);\r\n                    });\r\n                }\r\n              })\r\n              .catch(err => {\r\n                reject(err);\r\n              });\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  uploadPhotos(photosWithDetail: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this.userService\r\n        .getCurrentUser()\r\n        .then(user => {\r\n          this.executeUpload(photosWithDetail, user)\r\n            .then(resp => {\r\n              //console.log(resp);\r\n              resolve(\"Photos Successfuly Uploaded!\");\r\n            })\r\n            .catch(err => {\r\n              reject(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  uploadPhotosStatus(photosWithDetail: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this.userService\r\n        .getCurrentUser()\r\n        .then(user => {\r\n          this.executeUpload(photosWithDetail, user)\r\n            .then(resp => {\r\n              resolve(resp);\r\n            })\r\n            .catch(err => {\r\n              reject(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  getUpload(id) {\r\n    return this.db.doc(`uploads/${id}`).valueChanges();\r\n  }\r\n\r\n  private getUploads(user: any) {\r\n    return new Promise((resolve, reject) => {\r\n      let UPLOADS = [];\r\n      let queryResponse = this.db\r\n        .collection(\"uploads\", ref => ref.where(\"userId\", \"==\", user.uid))\r\n        .valueChanges();\r\n      queryResponse.subscribe(\r\n        data => {\r\n          data.forEach(upload => {\r\n            UPLOADS.push(upload);\r\n            if (data.length === UPLOADS.length) {\r\n              resolve(UPLOADS);\r\n            }\r\n          });\r\n        },\r\n        err => {\r\n          reject(err);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getCurrentUserPhotos() {\r\n    return new Promise((resolve, reject) => {\r\n      this.userService\r\n        .getCurrentUser()\r\n        .then(user => {\r\n          this.getUploads(user)\r\n            .then(resp => {\r\n              resolve(resp);\r\n            })\r\n            .catch(err => {\r\n              reject(err);\r\n            });\r\n\r\n          //resolve();\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport \"rxjs/add/operator/toPromise\";\r\nimport {\r\n  AngularFirestore\r\n} from \"angularfire2/firestore\";\r\nimport { UserService } from \"./user.service\";\r\n\r\n@Injectable()\r\nexport class PostService {\r\n  constructor(private db: AngularFirestore, private userService: UserService) {\r\n    // For time error\r\n    db.firestore.settings({ timestampsInSnapshots: true });\r\n  }\r\n\r\n  submitPost(post: any) {\r\n    return new Promise((resolve, reject) => {\r\n      this.userService\r\n        .getCurrentUserData()\r\n        .then((user: UserData) => {\r\n          post.user = user.username;\r\n          this.db\r\n            .collection(\"posts\")\r\n            .add(post)\r\n            .then(res => { resolve('Submitted Succesfuly') })\r\n            .catch(err => reject(err));\r\n        })\r\n        .catch(err => reject(err));\r\n    });\r\n  }\r\n  getUserPostsByUsername(username: string) {\r\n    return this.db.collection('posts', ref => ref.where(\"user\", \"==\", username))\r\n      .valueChanges();\r\n  }\r\n}\r\n"],"sourceRoot":""}